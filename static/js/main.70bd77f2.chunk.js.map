{"version":3,"sources":["components/Instructions.js","components/Info.js","components/Skills.js","components/Aside.js","components/Intro.js","components/Education.js","components/Experience.js","components/Resume.js","App.js","index.js"],"names":["Instructions","toggleInstructions","setState","prevState","instructions","state","this","id","className","type","onClick","Component","Info","handlePhotoChange","e","photo","target","value","handleAddress1Change","address1","handleAddress2Change","address2","handlePhoneChange","phone","handleEmailChange","email","handleWebsiteChange","website","handleLinkedinChange","linkedin","toggleEdit","edit","toggleEditPhoto","editPhoto","profilePhoto","backgroundImage","style","htmlFor","placeholder","onChange","Skills","handleSkillChange","skill","onSubmitSkill","preventDefault","skills","concat","uniqid","handleRemove","key","newSkills","filter","map","Aside","Intro","handleNameChange","name","handleTitleChange","title","handleProfileChange","profile","Education","handleSchoolChange","school","handleDegreeChange","degree","handleStartDateChange","startDate","handleEndDateChange","endDate","handleLocationChange","location","handleMinorChange","minor","handleGPAChange","gpa","onSubmitEducation","education","date","newEdu","edu","Experience","handleCompanyChange","company","handleDescChange","desc","onSubmitExperience","experience","newExp","exp","Resume","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70bd77f2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Instructions extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            instructions: true\r\n        }\r\n    }\r\n\r\n    toggleInstructions = () => {\r\n        this.setState(prevState => ({\r\n            instructions: !prevState.instructions\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.instructions &&\r\n                    <div id=\"Instructions\">\r\n                        <div className=\"container\">\r\n                            <h2>Instructions</h2>\r\n                            <ul>\r\n                                <li>Hover over the areas of the resume to find Edit and Add buttons</li>\r\n                                <li>Edit your information in the form fields and submit your edits</li>\r\n                                <li>Add your Education and Experience or click on entries to remove them</li>\r\n                                <li>When your done editing, use <code>CTRL</code> + <code>P</code> (<code>CMND</code> + <code>P</code> on a Mac) to print your resume to pdf</li>\r\n                            </ul>\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.toggleInstructions}\r\n                            >\r\n                                Get Started\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Instructions;","import React, { Component } from \"react\";\r\n\r\nclass Info extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            photo: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRBwgu1A5zgPSvfE83nurkuzNEoXs9DMNr8Ww&usqp=CAU',\r\n            address1: '',\r\n            address2: '',\r\n            phone: '',\r\n            email: '',\r\n            website: '',\r\n            linkedin: '',\r\n            edit: false,\r\n            editPhoto: false\r\n        }\r\n    }\r\n\r\n    handlePhotoChange = e => {\r\n        this.setState({\r\n            photo: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAddress1Change = e => {\r\n        this.setState({\r\n            address1: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAddress2Change = e => {\r\n        this.setState({\r\n            address2: e.target.value\r\n        })\r\n    }\r\n\r\n    handlePhoneChange = e => {\r\n        this.setState({\r\n            phone: e.target.value\r\n        })\r\n    }\r\n\r\n    handleEmailChange = e => {\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    handleWebsiteChange = e => {\r\n        this.setState({\r\n            website: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLinkedinChange = e => {\r\n        this.setState({\r\n            linkedin: e.target.value\r\n        })\r\n    }\r\n\r\n    toggleEdit = () => {\r\n        this.setState(prevState => ({\r\n            edit: !prevState.edit\r\n        }))\r\n    }\r\n\r\n    toggleEditPhoto = () => {\r\n        this.setState(prevState => ({\r\n            editPhoto: !prevState.editPhoto\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            photo,\r\n            address1,\r\n            address2,\r\n            phone,\r\n            email,\r\n            website,\r\n            linkedin,\r\n            edit,\r\n            editPhoto\r\n        } = this.state;\r\n\r\n        var profilePhoto = {\r\n            backgroundImage: 'url(' + photo + ')'\r\n        }\r\n\r\n        return (\r\n            <div id=\"Info\">\r\n                <div className=\"header\">Resume</div>\r\n                <div\r\n                    id=\"profile-photo\"\r\n                    style={profilePhoto}\r\n                    onClick={this.toggleEditPhoto}\r\n                />\r\n                <div className=\"address\">\r\n                    <h2>Address</h2>\r\n                    <p>{address1 ? address1 : '123 Address St'}</p>\r\n                    <p>{address2 ? address2 : 'City, ST 55555'}</p>\r\n                </div>\r\n                <div className=\"phone\">\r\n                    <h2>Phone</h2>\r\n                    <p>{phone ? phone : '555-555-5555'}</p>\r\n                </div>\r\n                <div className=\"email\">\r\n                    <h2>Email</h2>\r\n                    <p>{email ? email : 'info@website.com'}</p>\r\n                </div>\r\n                <div className=\"online\">\r\n                    <h2>Online</h2>\r\n                    <p>{website ? website : 'website.com'}</p>\r\n                    <p>linkedin.com/in/{linkedin ? linkedin : 'user-name'}</p>\r\n                </div>\r\n                <button\r\n                    className=\"edit-toggle\"\r\n                    type=\"button\"\r\n                    onClick={this.toggleEdit}\r\n                >\r\n                    Edit\r\n                </button>\r\n\r\n                {edit &&\r\n                    <form id=\"intro-edit\" className=\"edit-form\">\r\n                        <label htmlFor=\"address1\">Address</label>\r\n                        <input\r\n                            id=\"address1\"\r\n                            type=\"text\"\r\n                            placeholder=\"123 Address St\"\r\n                            onChange={this.handleAddress1Change}\r\n                        />\r\n                        <label htmlFor=\"address2\">City, State, & Zip Code</label>\r\n                        <input\r\n                            id=\"address2\"\r\n                            type=\"text\"\r\n                            placeholder=\"City, ST 55555\"\r\n                            onChange={this.handleAddress2Change}\r\n                        />\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <input\r\n                            id=\"phone\"\r\n                            type=\"text\"\r\n                            onChange={this.handlePhoneChange}\r\n                        />\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"text\"\r\n                            onChange={this.handleEmailChange}\r\n                        />\r\n                        <label htmlFor=\"website\">Website</label>\r\n                        <input\r\n                            id=\"website\"\r\n                            type=\"text\"\r\n                            onChange={this.handleWebsiteChange}\r\n                        />\r\n                        <label htmlFor=\"linkedin\">LinkedIn Username</label>\r\n                        <input\r\n                            id=\"linkedin\"\r\n                            type=\"text\"\r\n                            onChange={this.handleLinkedinChange}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.toggleEdit}\r\n                        >\r\n                            Close Edit\r\n                        </button>\r\n                    </form>\r\n                }\r\n\r\n                {editPhoto &&\r\n                    <form id=\"photo-edit\" className=\"edit-form\">\r\n                        <label htmlFor=\"photo\">Photo URL</label>\r\n                        <input\r\n                            id=\"photo\"\r\n                            type=\"text\"\r\n                            onChange={this.handlePhotoChange}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.toggleEditPhoto}\r\n                        >\r\n                            Close Edit\r\n                        </button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Info;","import React, { Component } from \"react\";\r\nimport uniqid from 'uniqid';\r\n\r\nclass Skills extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state= {\r\n            skill: '',\r\n            skills: [\r\n                {\r\n                    id: uniqid(),\r\n                    skill: 'Creative thinking'\r\n                },\r\n                {\r\n                    id: uniqid(),\r\n                    skill: 'Communication'\r\n                },\r\n                {\r\n                    id: uniqid(),\r\n                    skill: 'Listening'\r\n                },\r\n                {\r\n                    id: uniqid(),\r\n                    skill: 'Detail-Oriented'\r\n                },\r\n                {\r\n                    id: uniqid(),\r\n                    skill: 'Time Management'\r\n                },\r\n                {\r\n                    id: uniqid(),\r\n                    skill: 'Problem Solving'\r\n                },\r\n                {\r\n                    id: uniqid(),\r\n                    skill: 'Artistic Eye'\r\n                },\r\n                {\r\n                    id: uniqid(),\r\n                    skill: 'Adaptability'\r\n                }\r\n            ],\r\n            edit: false\r\n        }\r\n    }\r\n\r\n    handleSkillChange = e => {\r\n        this.setState({\r\n            skill: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitSkill = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            skills: this.state.skills.concat({\r\n                id: uniqid(),\r\n                skill: this.state.skill\r\n            }),\r\n            skill: ''\r\n        })\r\n\r\n        this.toggleEdit()\r\n    }\r\n\r\n    toggleEdit = () => {\r\n        this.setState(prevState => ({\r\n            edit: !prevState.edit\r\n        }))\r\n    }\r\n\r\n    handleRemove = key => {\r\n        const newSkills = this.state.skills.filter(skill => skill.id !== key)\r\n\r\n        this.setState({\r\n            skills: newSkills\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            skill,\r\n            skills,\r\n            edit\r\n        } = this.state;\r\n\r\n        return (\r\n            <div id=\"Skills\">\r\n                <h2>Skills</h2>\r\n                <ul>\r\n                    {skills.map(skill => {\r\n                        return(\r\n                            <li key={skill.id} onClick={() => this.handleRemove(skill.id)}>{skill.skill}</li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n\r\n                <button\r\n                    className=\"edit-toggle\"\r\n                    type=\"button\"\r\n                    onClick={this.toggleEdit}\r\n                >\r\n                    Add\r\n                </button>\r\n\r\n                {edit &&\r\n                    <form id=\"skill-add\" className=\"edit-form\">\r\n                        <label htmlFor=\"skill\">Skill</label>\r\n                        <input\r\n                            id=\"skill\"\r\n                            type=\"text\"\r\n                            value={skill}\r\n                            onChange={this.handleSkillChange}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.onSubmitSkill}\r\n                        >\r\n                            Add Experience\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.toggleEdit}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Skills;","import React, { Component } from \"react\";\r\nimport Info from './Info';\r\nimport Skills from './Skills';\r\n\r\nclass Aside extends Component {\r\n    render() {\r\n        return (\r\n            <aside id=\"Aside\">\r\n                <Info />\r\n                <Skills />\r\n            </aside>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Aside;","import React, { Component } from \"react\";\r\n\r\nclass Intro extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            name: '',\r\n            title: '',\r\n            profile: '',\r\n            edit: false\r\n        };\r\n    }\r\n\r\n    handleNameChange = e => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    handleTitleChange = e => {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n\r\n    handleProfileChange = e => {\r\n        this.setState({\r\n            profile: e.target.value\r\n        })\r\n    }\r\n\r\n    toggleEdit = () => {\r\n        this.setState(prevState => ({\r\n            edit: !prevState.edit\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { name, title, profile, edit } = this.state;\r\n\r\n        return (\r\n            <div id=\"Intro\">\r\n                <h1>{name ? name : 'Your name'}</h1>\r\n                <p className=\"title\">{title ? title : 'Your title'}</p>\r\n                <h2>Profile</h2>\r\n                <p className=\"profile\">{profile ? profile : 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'}</p>\r\n                <button\r\n                    className=\"edit-toggle\"\r\n                    type=\"button\"\r\n                    onClick={this.toggleEdit}\r\n                >\r\n                    Edit\r\n                </button>\r\n                \r\n                {edit &&\r\n                    <form id=\"intro-edit\" className=\"edit-form\">\r\n                        <label htmlFor=\"name\">Your name</label>\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            onChange={this.handleNameChange}\r\n                        />\r\n                        <label htmlFor=\"title\">Your title</label>\r\n                        <input\r\n                            id=\"title\"\r\n                            type=\"text\"\r\n                            onChange={this.handleTitleChange}\r\n                        />\r\n                        <label htmlFor=\"profile\">Profile</label>\r\n                        <textarea\r\n                            id=\"profile\"\r\n                            onChange={this.handleProfileChange}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.toggleEdit}\r\n                        >\r\n                            Close Edit\r\n                        </button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Intro;","import React, { Component } from \"react\";\r\nimport uniqid from 'uniqid';\r\n\r\nclass Education extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            school: '',\r\n            degree: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            location: '',\r\n            minor: '',\r\n            gpa: '',\r\n            education: [\r\n                {\r\n                    id: uniqid(),\r\n                    school: 'Cool University',\r\n                    degree: 'B.S. Web Development',\r\n                    date: 'Aug 2019 - July 2020',\r\n                    location: 'New York City, NY',\r\n                    minor: 'Lorem ipsum dolor',\r\n                    gpa: '4.0'\r\n                }\r\n            ],\r\n            edit: false\r\n        }\r\n    }\r\n\r\n    handleSchoolChange = e => {\r\n        this.setState({\r\n            school: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDegreeChange = e => {\r\n        this.setState({\r\n            degree: e.target.value\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = e => {\r\n        this.setState({\r\n            startDate: e.target.value\r\n        })\r\n    }\r\n\r\n    handleEndDateChange = e => {\r\n        this.setState({\r\n            endDate: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLocationChange = e => {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    handleMinorChange = e => {\r\n        this.setState({\r\n            minor: e.target.value\r\n        })\r\n    }\r\n\r\n    handleGPAChange = e => {\r\n        this.setState({\r\n            gpa: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitEducation = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            education: this.state.education.concat({\r\n                id: uniqid(),\r\n                school: this.state.school,\r\n                degree: this.state.degree,\r\n                date: this.state.startDate + ' - ' + this.state.endDate,\r\n                location: this.state.location,\r\n                minor: this.state.minor,\r\n                gpa: this.state.gpa\r\n            }),\r\n            school: '',\r\n            degree: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            location: '',\r\n            minor: '',\r\n            gpa: ''\r\n        })\r\n\r\n        this.toggleEdit()\r\n    }\r\n\r\n    toggleEdit = () => {\r\n        this.setState(prevState => ({\r\n            edit: !prevState.edit\r\n        }))\r\n    }\r\n\r\n    handleRemove = key => {\r\n        const newEdu = this.state.education.filter(education => education.id !== key)\r\n\r\n        this.setState({\r\n            education: newEdu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            school,\r\n            degree,\r\n            startDate,\r\n            endDate,\r\n            location,\r\n            minor,\r\n            gpa,\r\n            education,\r\n            edit\r\n        } = this.state;\r\n        \r\n        return (\r\n            <div id=\"Education\">\r\n                <h2>Education</h2>\r\n                {education.map(edu => {\r\n                    return (\r\n                        <div key={edu.id} onClick={() => this.handleRemove(edu.id)}>\r\n                            <div>\r\n                                <p className=\"education-date\">{edu.date}</p>\r\n                                <p className=\"education-degree\">{edu.degree}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"education-school\">{edu.school}</p>\r\n                                <p className=\"education-location\">{edu.location}</p>\r\n                                <p className=\"education-minor\">minor: {edu.minor}</p>\r\n                                <p className=\"education-gpa\">gpa: {edu.gpa}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <button\r\n                    className=\"edit-toggle\"\r\n                    type=\"button\"\r\n                    onClick={this.toggleEdit}\r\n                >\r\n                    Add\r\n                </button>\r\n\r\n                {edit &&\r\n                    <form id=\"education-add\" className=\"edit-form\">\r\n                        <label htmlFor=\"school\">School</label>\r\n                        <input\r\n                            id=\"school\"\r\n                            type=\"text\"\r\n                            value={school}\r\n                            onChange={this.handleSchoolChange}\r\n                        />\r\n                        <label htmlFor=\"degree\">Degree</label>\r\n                        <input\r\n                            id=\"degree\"\r\n                            type=\"text\"\r\n                            value={degree}\r\n                            onChange={this.handleDegreeChange}\r\n                        />\r\n                        <label htmlFor=\"start-date\">Start Date</label>\r\n                        <input\r\n                            id=\"start-date\"\r\n                            type=\"text\"\r\n                            value={startDate}\r\n                            placeholder=\"Month &amp; Year\"\r\n                            onChange={this.handleStartDateChange}\r\n                        />\r\n                        <label htmlFor=\"end-date\">End Date</label>\r\n                        <input\r\n                            id=\"end-date\"\r\n                            type=\"text\"\r\n                            value={endDate}\r\n                            placeholder=\"Month &amp; Year\"\r\n                            onChange={this.handleEndDateChange}\r\n                        />\r\n                        <label htmlFor=\"location\">Location</label>\r\n                        <input\r\n                            id=\"location\"\r\n                            type=\"text\"\r\n                            value={location}\r\n                            onChange={this.handleLocationChange}\r\n                        />\r\n                        <label htmlFor=\"minor\">Minor</label>\r\n                        <input\r\n                            id=\"minor\"\r\n                            type=\"text\"\r\n                            value={minor}\r\n                            onChange={this.handleMinorChange}\r\n                        />\r\n                        <label htmlFor=\"gpa\">GPA</label>\r\n                        <input\r\n                            id=\"gpa\"\r\n                            type=\"text\"\r\n                            value={gpa}\r\n                            onChange={this.handleGPAChange}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.onSubmitEducation}\r\n                        >\r\n                            Add Education\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.toggleEdit}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Education;","import React, { Component } from \"react\";\r\nimport uniqid from 'uniqid';\r\n\r\nclass Experience extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            company: '',\r\n            title: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            location: '',\r\n            desc: '',\r\n            experience: [\r\n                {\r\n                    id: uniqid(),\r\n                    company: 'Super Awesome Web Company',\r\n                    title: 'Senior Web Developer',\r\n                    date: 'Aug 2019 - July 2020',\r\n                    location: 'New York City, NY',\r\n                    desc: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\r\n                },\r\n                {\r\n                    id: uniqid(),\r\n                    company: 'Another Web Company',\r\n                    title: 'Junior Web Developer',\r\n                    date: 'Nov 2016 - Aug 2019',\r\n                    location: 'New York City, NY',\r\n                    desc: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'\r\n                }\r\n            ],\r\n            edit: false\r\n        };\r\n    }\r\n\r\n    handleCompanyChange = e => {\r\n        this.setState({\r\n            company: e.target.value\r\n        })\r\n    }\r\n\r\n    handleTitleChange = e => {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n\r\n    handleStartDateChange = e => {\r\n        this.setState({\r\n            startDate: e.target.value\r\n        })\r\n    }\r\n\r\n    handleEndDateChange = e => {\r\n        this.setState({\r\n            endDate: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLocationChange = e => {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDescChange = e => {\r\n        this.setState({\r\n            desc: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitExperience = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            experience: this.state.experience.concat({\r\n                id: uniqid(),\r\n                company: this.state.company,\r\n                title: this.state.title,\r\n                date: this.state.startDate + ' - ' + this.state.endDate,\r\n                location: this.state.location,\r\n                desc: this.state.desc\r\n            }),\r\n            company: '',\r\n            title: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            location: '',\r\n            desc: ''\r\n        })\r\n\r\n        this.toggleEdit()\r\n    }\r\n\r\n    toggleEdit = () => {\r\n        this.setState(prevState => ({\r\n            edit: !prevState.edit\r\n        }))\r\n    }\r\n\r\n    handleRemove = key => {\r\n        const newExp = this.state.experience.filter(exp => exp.id !== key)\r\n\r\n        this.setState({\r\n            experience: newExp\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            company,\r\n            title,\r\n            startDate,\r\n            endDate,\r\n            location,\r\n            desc,\r\n            experience,\r\n            edit\r\n        } = this.state;\r\n\r\n        return (\r\n            <div id=\"Experience\">\r\n                <h2>Experience</h2>\r\n                {experience.map(exp => {\r\n                    return(\r\n                        <div key={exp.id} onClick={() => this.handleRemove(exp.id)}>\r\n                            <div>\r\n                                <p className=\"experience-date\">{exp.date}</p>\r\n                                <p className=\"experience-title\">{exp.title}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"experience-company\">{exp.company}</p>\r\n                                <p className=\"experience-location\">{exp.location}</p>\r\n                                <p className=\"experience-desc\">{exp.desc}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <button\r\n                    className=\"edit-toggle\"\r\n                    type=\"button\"\r\n                    onClick={this.toggleEdit}\r\n                >\r\n                    Add\r\n                </button>\r\n\r\n                {edit &&\r\n                    <form id=\"experience-add\" className=\"edit-form\">\r\n                        <label htmlFor=\"company\">Company</label>\r\n                        <input\r\n                            id=\"company\"\r\n                            type=\"text\"\r\n                            value={company}\r\n                            onChange={this.handleCompanyChange}\r\n                        />\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input\r\n                            id=\"title\"\r\n                            type=\"text\"\r\n                            value={title}\r\n                            onChange={this.handleTitleChange}\r\n                        />\r\n                        <label htmlFor=\"start-date\">Start Date</label>\r\n                        <input\r\n                            id=\"start-date\"\r\n                            type=\"text\"\r\n                            value={startDate}\r\n                            onChange={this.handleStartDateChange}\r\n                        />\r\n                        <label htmlFor=\"end-date\">End Date</label>\r\n                        <input\r\n                            id=\"end-date\"\r\n                            type=\"text\"\r\n                            value={endDate}\r\n                            onChange={this.handleEndDateChange}\r\n                        />\r\n                        <label htmlFor=\"location\">Location</label>\r\n                        <input\r\n                            id=\"location\"\r\n                            type=\"text\"\r\n                            value={location}\r\n                            onChange={this.handleLocationChange}\r\n                        />\r\n                        <label htmlFor=\"desc\">Description</label>\r\n                        <input\r\n                            id=\"desc\"\r\n                            type=\"text\"\r\n                            value={desc}\r\n                            onChange={this.handleDescChange}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.onSubmitExperience}\r\n                        >\r\n                            Add Experience\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.toggleEdit}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Experience;","import React, { Component } from \"react\";\r\nimport Aside from './Aside';\r\nimport Intro from './Intro';\r\nimport Education from './Education';\r\nimport Experience from './Experience';\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"Resume\">\r\n                <Aside />\r\n                <main>\r\n                    <Intro />\r\n                    <Education />\r\n                    <Experience />\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Resume;","import React, { Component } from \"react\";\r\nimport Instructions from './components/Instructions';\r\nimport Resume from './components/Resume';\r\nimport \"./styles/styles.css\";\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"App\">\r\n\t\t\t\t<Instructions />\r\n\t\t\t\t<Resume />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}